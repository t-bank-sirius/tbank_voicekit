from fastapi import FastAPI, UploadFile, File, Form
from fastapi.responses import FileResponse, JSONResponse
from tempfile import NamedTemporaryFile
from pathlib import Path
from openai import OpenAI
from pydantic import BaseModel
import uvicorn

app = FastAPI(
    title="TTS & STT API",
    description="API –¥–ª—è —Å–∏–Ω—Ç–µ–∑–∞ –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏ —á–µ—Ä–µ–∑ VseGPT",
    version="1.0.0"
)

client = OpenAI(
    api_key="sk-or-vv-d23b1436428e55b996edc7f98976a05e4a7ef80147719183abdf0a252fc254a9",
    base_url="https://api.vsegpt.ru/v1",
)

class TTSRequest(BaseModel):
    text: str
    voice: str = "nova"

# TTS ‚Äî —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∏–º–∞–µ—Ç JSON
@app.post("/tts")
async def tts(request: TTSRequest):
    """
    üó£Ô∏è –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ç–µ–∫—Å—Ç –≤ —Ä–µ—á—å (TTS).
    - *text*: –¢–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∏–≤–∞–Ω–∏—è.
    - *voice*: –ì–æ–ª–æ—Å (alloy, echo, fable, onyx, nova, shimmer).
    """
    with NamedTemporaryFile(suffix=".mp3", delete=False) as tmp:
        response = client.audio.speech.create(
            model="tts-openai/tts-1",
            voice=request.voice,
            input=request.text
        )
        response.write_to_file(tmp.name)
        filename = tmp.name

    return FileResponse(
        filename,
        media_type="audio/mpeg",
        filename="speech.mp3"
    )

@app.post("/stt")
async def stt(
    audio: UploadFile = File(...)
):
    """
    ‚úçÔ∏è –†–∞—Å–ø–æ–∑–Ω–∞—ë—Ç —Ä–µ—á—å –∏–∑ mp3-—Ñ–∞–π–ª–∞ (STT).
    - *audio*: –ê—É–¥–∏–æ—Ñ–∞–π–ª —Ñ–æ—Ä–º–∞—Ç–∞ mp3.
    """
    with NamedTemporaryFile(suffix=".mp3", delete=False) as tmp:
        contents = await audio.read()
        tmp.write(contents)
        tmp_path = tmp.name

    with open(tmp_path, "rb") as audio_file:
        transcript = client.audio.transcriptions.create(
            model="stt-openai/whisper-1",
            response_format="json",
            file=audio_file
        )
    return JSONResponse({"text": transcript.text})

if __name__ == "__main__":
    uvicorn.run("main:app", host="127.0.0.1", port=8009, reload=True)
